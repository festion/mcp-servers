name: Deploy MCP Wrapper Scripts

on:
  push:
    branches: [ main ]
    paths:
      - '*-wrapper.sh'
      - 'sync-wrappers.sh'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    if: github.repository == 'festion/mcp-servers'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        clean: false  # Keep local changes and avoid conflicts
        
    - name: Verify runner environment
      run: |
        echo "üîç Verifying local runner environment..."
        echo "Current directory: $(pwd)"
        echo "Workspace directory exists: $(test -d /home/dev/workspace && echo 'YES' || echo 'NO')"
        echo "MCP tokens directory exists: $(test -d /home/dev/.mcp_tokens && echo 'YES' || echo 'NO')"
        echo "Git repository status:"
        git status --porcelain || echo "Not a git repository or no changes"
        
    - name: Deploy wrapper scripts locally
      run: |
        echo "üöÄ Deploying wrapper scripts to local workspace..."
        echo "Repository: $(pwd)"
        echo "Target: /home/dev/workspace/"
        
        # Run the sync script directly (we're already in the right place)
        if [ -f "./sync-wrappers.sh" ]; then
          ./sync-wrappers.sh
          echo "‚úÖ Wrapper scripts synced successfully"
        else
          echo "‚ùå sync-wrappers.sh not found"
          exit 1
        fi
        
    - name: Validate deployment
      run: |
        echo "üîç Validating deployment..."
        
        # Check that wrapper scripts exist in workspace
        WRAPPER_SCRIPTS=(
          "hass-mcp-wrapper.sh"
          "proxmox-mcp-wrapper.sh"  
          "wikijs-mcp-wrapper.sh"
          "code-linter-wrapper.sh"
          "github-wrapper.sh"
        )
        
        FAILED=0
        for script in "${WRAPPER_SCRIPTS[@]}"; do
          if [ -x "/home/dev/workspace/$script" ]; then
            echo "‚úÖ $script deployed and executable"
          else
            echo "‚ùå $script missing or not executable"
            FAILED=1
          fi
        done
        
        if [ $FAILED -eq 1 ]; then
          echo "‚ùå Deployment validation failed"
          exit 1
        fi
        
        echo "‚úÖ All wrapper scripts deployed successfully"
        
    - name: Test MCP server connectivity (optional)
      continue-on-error: true
      run: |
        echo "üß™ Testing MCP server connectivity..."
        
        # Test a few servers with timeouts
        echo "Testing GitHub MCP server..."
        timeout 10 /home/dev/workspace/github-wrapper.sh < /dev/null > /dev/null 2>&1 && echo "‚úÖ GitHub MCP server OK" || echo "‚ö†Ô∏è GitHub MCP server test failed"
        
        echo "Testing Proxmox MCP server..."  
        timeout 10 /home/dev/workspace/proxmox-mcp-wrapper.sh < /dev/null > /dev/null 2>&1 && echo "‚úÖ Proxmox MCP server OK" || echo "‚ö†Ô∏è Proxmox MCP server test failed"
        
        echo "üèÅ MCP server testing completed (non-blocking)"
        
    - name: Cleanup and summary
      if: always()
      run: |
        echo "üìã Deployment Summary:"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Runner: $(hostname)"
        echo "Timestamp: $(date)"
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ MCP wrapper scripts deployment completed successfully!"
        else
          echo "üí• Deployment encountered issues"
        fi