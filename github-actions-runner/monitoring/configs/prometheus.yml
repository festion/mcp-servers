# Prometheus Configuration for GitHub Actions Runner Monitoring
# Enhanced configuration with comprehensive metric collection

global:
  scrape_interval: 30s
  evaluation_interval: 30s
  external_labels:
    monitor: 'github-actions-runner'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"
  - "/etc/prometheus/rules/*.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['health_monitor:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Custom GitHub Runner metrics
  - job_name: 'github-runner-custom'
    static_configs:
      - targets: ['localhost:9091']
    scrape_interval: 30s
    metrics_path: /metrics
    honor_labels: true

  # Docker daemon metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['host.docker.internal:9323']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics

  # Fluent Bit metrics
  - job_name: 'fluent-bit'
    static_configs:
      - targets: ['log_aggregator:2020']
    scrape_interval: 30s
    metrics_path: /api/v1/metrics/prometheus

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx_proxy:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # GitHub Runner application metrics (if available)
  - job_name: 'github-runner-app'
    static_configs:
      - targets: ['github-runner:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Blackbox exporter for external endpoint monitoring
  - job_name: 'blackbox-github-api'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://api.github.com
        - https://github.com
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Homelab infrastructure monitoring
  - job_name: 'blackbox-homelab'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
        - 192.168.1.155:8123  # Home Assistant
        - 192.168.1.137:8006  # Proxmox
        - 192.168.1.90:3000   # WikiJS
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Textfile collector for custom metrics
  - job_name: 'node-textfile-collector'
    static_configs:
      - targets: ['health_monitor:9100']
    scrape_interval: 60s
    metrics_path: /metrics
    honor_labels: true

# Recording rules for derived metrics
recording_rules:
  - name: github_runner_derived_metrics
    rules:
      # Runner efficiency metrics
      - record: github_runner:job_success_rate
        expr: |
          (
            rate(github_runner_jobs_total{status="success"}[5m]) /
            rate(github_runner_jobs_total{status="completed"}[5m])
          ) * 100

      # System health score
      - record: github_runner:health_score
        expr: |
          (
            (100 - github_runner_system_cpu_usage) * 0.3 +
            (100 - github_runner_system_memory_usage) * 0.3 +
            (100 - github_runner_system_disk_usage) * 0.2 +
            (github_runner_connection_status * 100) * 0.2
          )

      # Container availability
      - record: github_runner:container_availability
        expr: |
          avg(github_runner_container_status) * 100

      # Network connectivity score
      - record: github_runner:network_connectivity_score
        expr: |
          (
            github_runner_github_api_status * 50 +
            github_runner_homelab_connectivity_ratio * 50
          )

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    path: /prometheus/data

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"

# Web configuration
web:
  enable_lifecycle: true
  enable_admin_api: true