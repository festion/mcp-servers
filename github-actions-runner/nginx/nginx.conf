events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=metrics:10m rate=5r/s;
    
    # Upstream services
    upstream runner_backend {
        server runner:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream health_monitor {
        server health_monitor:9100 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream metrics_collector {
        server metrics_collector:9090 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Main server block
    server {
        listen 80;
        listen 443 ssl http2;
        server_name localhost;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # GitHub Runner proxy
        location /runner/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://runner_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Metrics endpoints
        location /metrics/ {
            limit_req zone=metrics burst=10 nodelay;
            
            # Allow only specific IPs or networks
            allow 172.20.0.0/16;
            allow 192.168.100.0/24;
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://metrics_collector/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health monitor endpoints
        location /monitor/ {
            limit_req zone=metrics burst=10 nodelay;
            
            # Allow only specific IPs or networks
            allow 172.20.0.0/16;
            allow 192.168.100.0/24;
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://health_monitor/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Deny access to sensitive files
        location ~ /\.ht {
            deny all;
        }
        
        location ~ /\.git {
            deny all;
        }
        
        # Default location
        location / {
            return 404;
        }
    }
    
    # Server status for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
        }
    }
}