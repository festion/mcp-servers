# Access Control Configuration for GitHub Actions Runner
# Defines authentication, authorization, and access policies

authentication:
  # GitHub token management
  github_token:
    type: "personal_access_token"  # or "github_app"
    rotation_policy:
      enabled: true
      rotation_interval_days: 30
      advance_warning_days: 7
      auto_rotation: false  # Manual approval required
    
    validation:
      format_check: true
      api_validation: true
      permission_validation: true
      expiry_check: true
    
    storage:
      encryption: "AES-256-GCM"
      key_derivation: "scrypt"
      salt_rounds: 16
      backup_encrypted: true
    
    required_permissions:
      - "actions:read"
      - "contents:read"
      - "metadata:read"
      - "pull_requests:read"
      - "repository_hooks:read"
    
    forbidden_permissions:
      - "admin:*"
      - "delete_repo"
      - "repo:security_events:write"

  # SSH key management for Git operations
  ssh_keys:
    algorithm: "ed25519"
    key_size: 256
    passphrase_policy:
      required: true
      min_length: 12
      complexity_rules:
        - uppercase
        - lowercase
        - numbers
        - special_chars
    
    rotation_policy:
      enabled: true
      rotation_interval_days: 90
      advance_warning_days: 14
      auto_rotation: false
    
    storage:
      location: "/home/runner/.ssh"
      permissions: "0600"
      owner: "runner:runner"
      backup_encrypted: true

  # Container access control
  container_access:
    run_as_user: 1001
    run_as_group: 1001
    allow_privilege_escalation: false
    read_only_root_filesystem: true
    
    allowed_capabilities: []  # No additional capabilities
    dropped_capabilities:
      - ALL
    
    seccomp_profile: "/security/config/seccomp-profile.json"
    apparmor_profile: "docker-default"

authorization:
  # Role-based access control
  roles:
    runner_user:
      description: "GitHub Actions runner execution role"
      permissions:
        filesystem:
          - read: ["/home/runner/actions-runner", "/tmp", "/var/tmp"]
          - write: ["/home/runner/actions-runner/_work", "/tmp", "/var/tmp"]
          - execute: ["/home/runner/actions-runner", "/usr/bin", "/bin"]
        network:
          - outbound: ["github.com:443", "github.com:22", "github.com:9418"]
          - dns: ["1.1.1.1:53", "8.8.8.8:53"]
        processes:
          - max_processes: 100
          - allowed_commands: ["git", "docker", "npm", "yarn", "python", "node"]
          - forbidden_commands: ["su", "sudo", "passwd", "mount", "umount"]

    monitoring_user:
      description: "Monitoring and observability role"
      permissions:
        filesystem:
          - read: ["/var/log", "/proc", "/sys"]
          - write: ["/var/log/monitoring"]
        network:
          - outbound: ["monitoring.internal:9090", "grafana.internal:3000"]
        processes:
          - max_processes: 10
          - allowed_commands: ["curl", "wget", "prometheus", "node_exporter"]

  # Access policies
  policies:
    default_deny:
      enabled: true
      description: "Deny all access by default"
    
    least_privilege:
      enabled: true
      description: "Grant minimum required permissions only"
    
    time_based_access:
      enabled: false  # Disabled for 24/7 runner operation
      allowed_hours: "00:00-23:59"
      timezone: "UTC"
    
    ip_restrictions:
      enabled: false  # Container networking handles this
      allowed_cidrs: []
      blocked_cidrs: ["169.254.169.254/32"]

audit:
  # Audit logging configuration
  audit_logging:
    enabled: true
    log_level: "info"
    log_format: "json"
    log_rotation:
      enabled: true
      max_size: "100MB"
      max_files: 10
      max_age: "30d"
    
    events_to_log:
      - authentication_attempts
      - authorization_failures
      - privilege_escalations
      - file_access_violations
      - network_access_violations
      - process_executions
      - configuration_changes
      - secret_access
    
    sensitive_data_handling:
      mask_secrets: true
      mask_tokens: true
      mask_passwords: true
      hash_user_data: true

  # Access monitoring
  access_monitoring:
    enabled: true
    real_time_alerts: true
    
    thresholds:
      failed_auth_attempts: 5
      privilege_escalation_attempts: 1
      suspicious_file_access: 10
      unusual_network_connections: 5
    
    alerting:
      webhook_url: "${SECURITY_WEBHOOK_URL}"
      email_notifications: false
      slack_notifications: false

compliance:
  # Compliance frameworks
  frameworks:
    cis_docker:
      enabled: true
      benchmark_version: "1.6.0"
      compliance_level: "Level 1"
    
    nist_csf:
      enabled: true
      implementation_tier: "Tier 2"
      
    iso_27001:
      enabled: false
      
    soc2:
      enabled: false

  # Compliance checks
  automated_checks:
    daily:
      - user_privilege_audit
      - file_permission_check
      - network_access_review
      - process_validation
    
    weekly:
      - access_pattern_analysis
      - unused_account_detection
      - permission_drift_detection
      - security_configuration_validation
    
    monthly:
      - full_access_audit
      - compliance_gap_analysis
      - risk_assessment_update
      - policy_effectiveness_review

  # Reporting
  reporting:
    enabled: true
    formats: ["json", "pdf", "html"]
    schedule: "weekly"
    retention_days: 365
    
    reports:
      - access_summary
      - compliance_status
      - security_incidents
      - policy_violations
      - risk_assessment

session_management:
  # Session security
  session_timeout: 3600  # 1 hour
  max_concurrent_sessions: 1
  session_validation_interval: 300  # 5 minutes
  
  # Token lifecycle
  token_lifecycle:
    access_token_ttl: 3600  # 1 hour
    refresh_token_ttl: 86400  # 24 hours
    token_rotation_on_use: true
    token_revocation_on_suspicious_activity: true

  # Anti-tampering
  anti_tampering:
    session_integrity_check: true
    token_binding: true
    secure_headers: true
    csrf_protection: true

multi_factor_authentication:
  # MFA configuration (for administrative access)
  admin_access:
    required: true
    methods: ["totp", "hardware_key"]
    backup_codes: true
    
  # Service accounts (GitHub runner)
  service_accounts:
    mfa_required: false  # Not applicable for service tokens
    token_validation: true
    regular_rotation: true

secrets_access:
  # Secret access control
  secret_categories:
    runtime_secrets:
      - github_token
      - ssh_private_key
      - docker_registry_credentials
    
    configuration_secrets:
      - database_passwords
      - api_keys
      - encryption_keys
    
    backup_secrets:
      - backup_encryption_keys
      - restore_credentials

  # Access patterns
  access_patterns:
    read_only_runtime: true
    write_access_prohibited: true
    temporary_access_only: true
    audit_all_access: true

  # Secret rotation
  rotation_policies:
    automatic_rotation: false
    manual_approval_required: true
    emergency_rotation_procedure: true
    rotation_notification: true