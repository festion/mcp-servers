# UNIFIED SYSTEM HEALTH PACKAGE - Final Fix
# File: packages/system_health.yaml  
# Purpose: Complete system health monitoring with dashboard compatibility
# Date: June 2, 2025

# =============================================================================
# TEMPLATE SENSORS FOR SYSTEM HEALTH MONITORING
# =============================================================================

template:
  - sensor:
      # Primary system status sensor
      - name: "Appliance System Status"
        unique_id: appliance_system_status
        state: >
          {% set alexa_available = states('media_player.everywhere') not in ['unavailable', 'unknown'] %}
          {% set mobile_available = states('device_tracker.pixel_9_pro_xl') == 'home' %}
          {% set dishwasher_sensor = states('sensor.dishwasher_electric_consumption_w') not in ['unavailable', 'unknown'] %}
          {% set washer_sensor = states('sensor.washing_machine_electric_consumption_w') not in ['unavailable', 'unknown'] %}
          
          {% if alexa_available and mobile_available and dishwasher_sensor and washer_sensor %}
            System Ready
          {% elif alexa_available and (dishwasher_sensor or washer_sensor) %}
            Alexa Available
          {% elif mobile_available and (dishwasher_sensor or washer_sensor) %}
            Mobile Only
          {% elif dishwasher_sensor or washer_sensor %}
            Sensors Only
          {% else %}
            System Down
          {% endif %}
        icon: >
          {% set status = this.state %}
          {% if status == 'System Ready' %}
            mdi:check-circle
          {% elif status in ['Alexa Available', 'Mobile Only', 'Sensors Only'] %}
            mdi:alert-circle
          {% else %}
            mdi:alert-octagon
          {% endif %}
        attributes:
          alexa_status: "{{ states('media_player.everywhere') }}"
          mobile_status: "{{ states('device_tracker.pixel_9_pro_xl') }}"
          dishwasher_sensor: "{{ states('sensor.dishwasher_electric_consumption_w') }}"
          washer_sensor: "{{ states('sensor.washing_machine_electric_consumption_w') }}"
          last_updated: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

      # Integration health status (text based - for dashboard display)
      - name: "Integration Health Status Emergency Fix"
        unique_id: integration_health_status_emergency_fix
        state: >
          {% set unavailable_count = states | selectattr('state', 'eq', 'unavailable') | list | count %}
          {% set unknown_count = states | selectattr('state', 'eq', 'unknown') | list | count %}
          {% set total_issues = unavailable_count + unknown_count %}
          
          {% if total_issues == 0 %}
            Excellent
          {% elif total_issues <= 10 %}
            Good
          {% elif total_issues <= 30 %}
            Fair
          {% elif total_issues <= 60 %}
            Poor
          {% else %}
            Critical
          {% endif %}
        icon: >
          {% set status = this.state %}
          {% if status == 'Excellent' %}
            mdi:check-circle
          {% elif status in ['Good', 'Fair'] %}
            mdi:alert-circle
          {% else %}
            mdi:alert-octagon
          {% endif %}
        attributes:
          unavailable_entities: "{{ states | selectattr('state', 'eq', 'unavailable') | list | count }}"
          unknown_entities: "{{ states | selectattr('state', 'eq', 'unknown') | list | count }}"
          total_entities: "{{ states | list | count }}"
          health_percentage: >
            {% set total = states | list | count %}
            {% set issues = (states | selectattr('state', 'eq', 'unavailable') | list | count) + (states | selectattr('state', 'eq', 'unknown') | list | count) %}
            {% if total > 0 %}
              {{ ((total - issues) / total * 100) | round(1) }}
            {% else %}
              100
            {% endif %}

      # Integration health percentage (numeric - for automations)
      - name: "Integration Health Percentage Fixed"
        unique_id: integration_health_percentage_fixed
        state: >
          {% set total = states | list | count %}
          {% set issues = (states | selectattr('state', 'eq', 'unavailable') | list | count) + (states | selectattr('state', 'eq', 'unknown') | list | count) %}
          {% if total > 0 %}
            {{ ((total - issues) / total * 100) | round(1) }}
          {% else %}
            100
          {% endif %}
        unit_of_measurement: "%"
        state_class: measurement
        icon: "mdi:chart-line"
        attributes:
          unavailable_count: "{{ states | selectattr('state', 'eq', 'unavailable') | list | count }}"
          unknown_count: "{{ states | selectattr('state', 'eq', 'unknown') | list | count }}"
          total_entities: "{{ states | list | count }}"

      # Alexa integration health (for dashboard)
      - name: "Alexa Integration Health Emergency Fix"
        unique_id: alexa_integration_health_emergency_fix
        state: >
          {% set alexa_entities = states | selectattr('entity_id', 'search', 'alexa') | rejectattr('entity_id', 'search', 'health') | list %}
          {% set total = alexa_entities | length %}
          {% set unavailable = alexa_entities | selectattr('state', 'eq', 'unavailable') | list | length %}
          {% if total > 0 %}
            {{ ((total - unavailable) / total * 100) | round(1) }}
          {% else %}
            100
          {% endif %}
        unit_of_measurement: "%"
        state_class: measurement
        icon: "mdi:amazon-alexa"
        attributes:
          total_alexa_entities: >
            {{ states | selectattr('entity_id', 'search', 'alexa') | rejectattr('entity_id', 'search', 'health') | list | length }}
          unavailable_alexa_entities: >
            {{ states | selectattr('entity_id', 'search', 'alexa') | rejectattr('entity_id', 'search', 'health') | selectattr('state', 'eq', 'unavailable') | list | length }}
          media_player_status: "{{ states('media_player.everywhere') }}"
          status_text: >
            {% set unavailable = states | selectattr('entity_id', 'search', 'alexa') | rejectattr('entity_id', 'search', 'health') | selectattr('state', 'eq', 'unavailable') | list | length %}
            {% if unavailable == 0 %}
              All OK
            {% elif unavailable <= 2 %}
              Minor Issues
            {% else %}
              Major Issues
            {% endif %}

      # Mobile app integration health (for dashboard)
      - name: "Mobile App Integration Health Emergency Fix"
        unique_id: mobile_app_integration_health_emergency_fix
        state: >
          {% set mobile_entities = states | selectattr('entity_id', 'search', 'mobile_app|pixel_9') | rejectattr('entity_id', 'search', 'health') | list %}
          {% set total = mobile_entities | length %}
          {% set unavailable = mobile_entities | selectattr('state', 'eq', 'unavailable') | list | length %}
          {% if total > 0 %}
            {{ ((total - unavailable) / total * 100) | round(1) }}
          {% else %}
            100
          {% endif %}
        unit_of_measurement: "%"
        state_class: measurement
        icon: "mdi:cellphone"
        attributes:
          total_mobile_entities: >
            {{ states | selectattr('entity_id', 'search', 'mobile_app|pixel_9') | rejectattr('entity_id', 'search', 'health') | list | length }}
          unavailable_mobile_entities: >
            {{ states | selectattr('entity_id', 'search', 'mobile_app|pixel_9') | rejectattr('entity_id', 'search', 'health') | selectattr('state', 'eq', 'unavailable') | list | length }}
          device_tracker_status: "{{ states('device_tracker.pixel_9_pro_xl') }}"
          status_text: >
            {% set unavailable = states | selectattr('entity_id', 'search', 'mobile_app|pixel_9') | rejectattr('entity_id', 'search', 'health') | selectattr('state', 'eq', 'unavailable') | list | length %}
            {% if unavailable == 0 %}
              All OK
            {% elif unavailable <= 5 %}
              Minor Issues
            {% else %}
              Major Issues
            {% endif %}

      # Switch integration health (for dashboard)
      - name: "Switch Integration Health Emergency Fix"
        unique_id: switch_integration_health_emergency_fix
        state: >
          {% set switch_entities = states.switch | rejectattr('entity_id', 'search', 'health') | list %}
          {% set total = switch_entities | length %}
          {% set unavailable = switch_entities | selectattr('state', 'eq', 'unavailable') | list | length %}
          {% if total > 0 %}
            {{ ((total - unavailable) / total * 100) | round(1) }}
          {% else %}
            100
          {% endif %}
        unit_of_measurement: "%"
        state_class: measurement
        icon: "mdi:toggle-switch"
        attributes:
          total_switches: "{{ states.switch | list | length }}"
          unavailable_switches: "{{ states.switch | selectattr('state', 'eq', 'unavailable') | list | length }}"
          online_switches: "{{ states.switch | selectattr('state', 'in', ['on', 'off']) | list | length }}"
          status_text: >
            {% set unavailable = states.switch | selectattr('state', 'eq', 'unavailable') | list | length %}
            {% set total = states.switch | list | length %}
            {% if unavailable == 0 %}
              All OK
            {% elif unavailable <= (total * 0.1) %}
              Minor Issues
            {% else %}
              Major Issues
            {% endif %}

      # Unavailable entities count (for dashboard)
      - name: "Unavailable Entities Emergency Fix"
        unique_id: unavailable_entities_emergency_fix
        state: >
          {{ states | selectattr('state', 'eq', 'unavailable') | list | count }}
        unit_of_measurement: "entities"
        state_class: measurement
        icon: "mdi:alert-circle"
        attributes:
          total_entities: "{{ states | list | count }}"
          percentage: >
            {% set total = states | list | count %}
            {% set unavailable = states | selectattr('state', 'eq', 'unavailable') | list | count %}
            {% if total > 0 %}
              {{ (unavailable / total * 100) | round(2) }}
            {% else %}
              0
            {% endif %}

      # Failed automations count (for dashboard)
      - name: "Failed Automations Count Emergency Fix"
        unique_id: failed_automations_count_emergency_fix
        state: >
          {{ states.automation | selectattr('state', 'eq', 'unavailable') | list | count }}
        unit_of_measurement: "automations"
        state_class: measurement
        icon: "mdi:robot-confused"
        attributes:
          total_automations: "{{ states.automation | list | count }}"
          working_automations: "{{ states.automation | selectattr('state', 'eq', 'on') | list | count }}"
          disabled_automations: "{{ states.automation | selectattr('state', 'eq', 'off') | list | count }}"
          unavailable_automations: "{{ states.automation | selectattr('state', 'eq', 'unavailable') | list | count }}"

      # Quiet hours status
      - name: "Quiet Hours Active"
        unique_id: quiet_hours_active
        state: >
          {% if states('input_boolean.appliance_quiet_hours_enabled') == 'on' %}
            {% set start_time = states('input_datetime.appliance_quiet_start') %}
            {% set end_time = states('input_datetime.appliance_quiet_end') %}
            {% set current_time = now().strftime('%H:%M:%S') %}
            
            {% if start_time and end_time and start_time != 'unknown' and end_time != 'unknown' %}
              {% if start_time > end_time %}
                {% if current_time >= start_time or current_time <= end_time %}
                  Active
                {% else %}
                  Inactive
                {% endif %}
              {% else %}
                {% if current_time >= start_time and current_time <= end_time %}
                  Active
                {% else %}
                  Inactive
                {% endif %}
              {% endif %}
            {% else %}
              Error
            {% endif %}
          {% else %}
            Disabled
          {% endif %}
        attributes:
          quiet_start: "{{ states('input_datetime.appliance_quiet_start') }}"
          quiet_end: "{{ states('input_datetime.appliance_quiet_end') }}"
          enabled: "{{ states('input_boolean.appliance_quiet_hours_enabled') }}"

  - binary_sensor:
      # Main system health binary sensor (for dashboard)
      - name: "System Health OK Emergency Fix"
        unique_id: system_health_ok_emergency_fix
        state: >
          {% set appliance_status = states('sensor.appliance_system_status') %}
          {% set integration_health = states('sensor.integration_health_status_emergency_fix') %}
          {% set unavailable_count = states('sensor.unavailable_entities_emergency_fix') | default(0) | int(0) %}
          
          {{ appliance_status in ['System Ready', 'Alexa Available', 'Mobile Only'] and 
             integration_health in ['Excellent', 'Good', 'Fair'] and 
             unavailable_count < 100 }}
        device_class: connectivity
        icon: >
          {% if this.state %}
            mdi:check-circle
          {% else %}
            mdi:alert-circle
          {% endif %}
        attributes:
          appliance_status: "{{ states('sensor.appliance_system_status') }}"
          integration_health: "{{ states('sensor.integration_health_status_emergency_fix') }}"
          unavailable_entities: "{{ states('sensor.unavailable_entities_emergency_fix') | default(0) | int(0) }}"

      # Critical integration failures
      - name: "Critical Integration Failures"
        unique_id: critical_integration_failures
        state: >
          {% set critical_entities = [
            'media_player.everywhere',
            'device_tracker.pixel_9_pro_xl',
            'sensor.dishwasher_electric_consumption_w',
            'sensor.washing_machine_electric_consumption_w'
          ] %}
          {% set failed_count = 0 %}
          {% for entity in critical_entities %}
            {% if states(entity) == 'unavailable' %}
              {% set failed_count = failed_count + 1 %}
            {% endif %}
          {% endfor %}
          {{ failed_count > 2 }}
        device_class: problem
        icon: >
          {% if this.state %}
            mdi:alert-octagon
          {% else %}
            mdi:check-circle
          {% endif %}
        attributes:
          failed_entities: >
            {% set critical_entities = [
              'media_player.everywhere',
              'device_tracker.pixel_9_pro_xl', 
              'sensor.dishwasher_electric_consumption_w',
              'sensor.washing_machine_electric_consumption_w'
            ] %}
            {% set failed_list = [] %}
            {% for entity in critical_entities %}
              {% if states(entity) == 'unavailable' %}
                {% set failed_list = failed_list + [entity] %}
              {% endif %}
            {% endfor %}
            {{ failed_list }}
          total_critical: 4
          failed_count: >
            {% set critical_entities = [
              'media_player.everywhere',
              'device_tracker.pixel_9_pro_xl', 
              'sensor.dishwasher_electric_consumption_w',
              'sensor.washing_machine_electric_consumption_w'
            ] %}
            {% set failed_count = 0 %}
            {% for entity in critical_entities %}
              {% if states(entity) == 'unavailable' %}
                {% set failed_count = failed_count + 1 %}
              {% endif %}
            {% endfor %}
            {{ failed_count }}

# =============================================================================
# AUTOMATION HEALTH MONITORING
# =============================================================================

automation:
  - id: system_health_status_reporter
    alias: "System Health - Status Reporter"
    description: "Report system health status every hour"
    trigger:
      - platform: time_pattern
        minutes: 0
    condition:
      - condition: time
        after: "08:00:00"
        before: "22:00:00"
    action:
      - service: logbook.log
        data:
          name: "System Health Report"
          message: >
            System Status: {{ states('sensor.appliance_system_status') | default('Unknown') }}
            Integration Health: {{ states('sensor.integration_health_status_emergency_fix') | default('Unknown') }}
            Health %: {{ states('sensor.integration_health_percentage_fixed') | default('Unknown') }}%
            Unavailable: {{ states('sensor.unavailable_entities_emergency_fix') | default('Unknown') }}
            Alexa: {{ states('media_player.everywhere') | default('Unknown') }}

  - id: health_monitor_system_health_recovery
    alias: "Health Monitor - System Health Recovery"
    description: "Monitor and attempt recovery when health drops critically"
    trigger:
      - platform: numeric_state
        entity_id: sensor.integration_health_percentage_fixed
        below: 70
        for:
          minutes: 5
    condition:
      - condition: time
        after: "08:00:00"
        before: "22:00:00"
    action:
      # Attempt to reload template integrations
      - service: template.reload
        continue_on_error: true
      
      - delay:
          seconds: 30
      
      # Log recovery attempt
      - service: logbook.log
        data:
          name: "System Recovery"
          message: "Attempted template reload due to health drop to {{ states('sensor.integration_health_percentage_fixed') }}%"
      
      # Send notification if still low after recovery attempt  
      - delay:
          minutes: 2
      
      - condition: numeric_state
        entity_id: sensor.integration_health_percentage_fixed
        below: 70
        
      - service: notify.mobile_app_pixel_9_pro_xl
        data:
          title: "⚠️ System Health Critical"
          message: >
            Health remains at {{ states('sensor.integration_health_percentage_fixed') }}% after recovery attempt.
            {{ states('sensor.unavailable_entities_emergency_fix') }} entities unavailable.
          data:
            priority: high

  - id: system_health_critical_failure_alert
    alias: "System Health - Critical Failure Alert"
    description: "Alert when critical systems fail"
    trigger:
      - platform: state
        entity_id: binary_sensor.critical_integration_failures
        to: 'on'
        for:
          minutes: 5
    action:
      # Emergency notification - bypasses quiet hours
      - service: notify.mobile_app_pixel_9_pro_xl
        data:
          title: "🚨 CRITICAL SYSTEM FAILURE"
          message: >
            Multiple critical integrations have failed.
            Check Settings > Devices & Services immediately.
          data:
            priority: high
            importance: max
      
      - service: logbook.log
        data:
          name: "CRITICAL FAILURE"
          message: "Critical integration failures detected"

  - id: system_health_notification_recovery_monitor
    alias: "System Health - Notification Recovery Monitor"
    description: "Monitor and attempt recovery of notification system"
    trigger:
      - platform: state
        entity_id: sensor.appliance_system_status
        to: 'System Down'
        for:
          minutes: 10
    action:
      # Attempt to reload Alexa Media integration
      - service: homeassistant.reload_config_entry
        continue_on_error: true
        target:
          entity_id: media_player.everywhere
      
      - delay:
          seconds: 30
      
      # Log recovery attempt
      - service: logbook.log
        data:
          name: "System Recovery"
          message: "Attempted recovery of notification system"

# =============================================================================
# INPUT HELPERS FOR SYSTEM HEALTH
# =============================================================================

input_boolean:
  system_recovery_in_progress:
    name: "System Recovery In Progress"
    icon: mdi:reload
    initial: false

input_text:
  system_health_log:
    name: "System Health Log"
    max: 1000
    initial: "System health monitoring initialized"
