# Enhanced Curatron Management System - UTC STANDARDIZED + Service Trigger Fix v2
# Updated: June 17, 2025 - FULL UTC COMPLIANCE + Direct None trigger handling
# Features: UTC-standardized progressive drying with completion date calculations + Fixed None trigger warnings
# Dashboard: Enhanced with expected completion date and standardized time displays

# === UNIFIED CONTROLLER (Primary Logic - UTC STANDARDIZED + SERVICE TRIGGER FIX v2) ===
- id: curatron_unified_controller
  alias: Curatron Unified Controller
  description: UTC-standardized automation with completion date calculations and None trigger handling
  mode: queued
  max: 3
  
  trigger:
    # Humidity sensor changes (with stability delay)
    - platform: state
      entity_id: sensor.curatron_humidity
      for:
        seconds: 30
      id: humidity_change
    
    # Drying mode toggle triggers
    - platform: state
      entity_id: input_boolean.curatron_drying_active_mode
      to: 'on'
      id: start_drying_mode
    
    - platform: state
      entity_id: input_boolean.curatron_drying_active_mode
      to: 'off'
      id: stop_drying_mode
    
    # Drying threshold changes
    - platform: state
      entity_id: input_number.curatron_drying_threshold_slider
      id: threshold_change
    
    # UTC-standardized interval threshold decrement check
    - platform: time_pattern
      hours: 3
      minutes: 15
      id: daily_threshold_check
    
    # Drying completion detection
    - platform: template
      value_template: >
        {{ states('input_number.curatron_drying_threshold_slider') | float(0) <= 
           states('input_number.curatron_drying_end_humidity') | float(60) and
           is_state('input_boolean.curatron_drying_active_mode', 'on') }}
      id: drying_complete_threshold
 
  condition:
    # Ensure all required entities are available
    - condition: template
      value_template: >
        {{ states('sensor.curatron_humidity') not in ['unavailable', 'unknown', ''] and
           states('input_boolean.curatron_drying_active_mode') not in ['unavailable', 'unknown', ''] and
           states('switch.curatron_plug') not in ['unavailable', 'unknown', ''] }}
 
  action:
    # UTC-STANDARDIZED variables for consistent state access and calculations
    - variables:
        current_humidity: "{{ states('sensor.curatron_humidity') | float(0) }}"
        is_drying_mode: "{{ is_state('input_boolean.curatron_drying_active_mode', 'on') }}"
        drying_threshold: "{{ states('input_number.curatron_drying_threshold_slider') | float(0) }}"
        normal_high_threshold: "{{ states('input_number.curatron_humidity_high_threshold') | float(65) }}"
        normal_low_threshold: "{{ states('input_number.curatron_humidity_low_threshold') | float(55) }}"
        current_switch_state: "{{ states('switch.curatron_plug') }}"
        
        # Configurable drying parameters
        start_humidity: "{{ states('input_number.curatron_drying_start_humidity') | float(80) }}"
        end_humidity: "{{ states('input_number.curatron_drying_end_humidity') | float(60) }}"
        total_days: "{{ states('input_number.curatron_drying_total_days') | float(14) }}"
        step_days: "{{ states('input_number.curatron_drying_step_days') | float(2) }}"
        hysteresis: "{{ states('input_number.curatron_drying_hysteresis') | float(3) }}"
        
        # UTC STANDARDIZED: Time calculations using UTC timestamps
        utc_now_timestamp: "{{ utcnow().timestamp() }}"
        drying_start_timestamp: "{{ state_attr('input_datetime.curatron_drying_start_time', 'timestamp') | float(0) }}"
        
        # Duration calculations (UTC-based)
        hours_since_start: >
          {% if drying_start_timestamp > 0 and is_drying_mode %}
            {{ ((utc_now_timestamp - drying_start_timestamp) / 3600) | round(1) }}
          {% else %}
            0
          {% endif %}
        days_since_start: "{{ (hours_since_start / 24) | round(1) }}"
        
        # Calculate progressive drying parameters
        humidity_range: "{{ start_humidity - end_humidity }}"
        total_steps: "{{ (total_days / step_days) | round(0) }}"
        humidity_per_step: "{{ (humidity_range / total_steps) | round(1) }}"
        current_step: "{{ (days_since_start / step_days) | round(0) }}"
        target_humidity_for_step: "{{ [start_humidity - (current_step * humidity_per_step), end_humidity] | max }}"
        
        # UTC STANDARDIZED: Completion date calculations
        total_seconds: "{{ total_days * 24 * 3600 }}"
        completion_timestamp: >
          {% if drying_start_timestamp > 0 and is_drying_mode %}
            {{ drying_start_timestamp + total_seconds }}
          {% else %}
            0
          {% endif %}
        completion_date_utc: >
          {% if completion_timestamp > 0 %}
            {{ completion_timestamp | timestamp_utc }}
          {% else %}
            Unknown
          {% endif %}
        completion_date_local: >
          {% if completion_timestamp > 0 %}
            {{ completion_timestamp | timestamp_local }}
          {% else %}
            Unknown
          {% endif %}
        
        # Progress calculations
        progress_percentage: >
          {% if total_days > 0 and days_since_start > 0 %}
            {{ (days_since_start / total_days * 100) | round(1) }}
          {% else %}
            0
          {% endif %}
        remaining_days: "{{ [total_days - days_since_start, 0] | max | round(1) }}"
        
        # ENHANCED: Safe trigger ID extraction for logging with better None handling
        trigger_info: >
          {% if trigger is defined and trigger is not none and trigger is mapping and 'id' in trigger %}
            {{ trigger.id }}
          {% elif trigger is defined and trigger is not none and trigger is mapping and 'entity_id' in trigger %}
            {{ trigger.entity_id | default('Entity Change') }}
          {% elif trigger is defined and trigger is not none and trigger is mapping and 'platform' in trigger %}
            {{ trigger.platform | default('Platform Event') }}
          {% else %}
            Service Call
          {% endif %}
    
    # Enhanced state machine logic
    - choose:
        # === DRYING MODE ACTIVATION (UTC STANDARDIZED) ===
        - conditions:
            - condition: trigger
              id: start_drying_mode
          sequence:
            # Set initial threshold and record UTC start time
            - service: input_number.set_value
              target:
                entity_id: input_number.curatron_drying_threshold_slider
              data:
                value: "{{ start_humidity }}"
            # UTC STANDARDIZED: Store start time in UTC
            - service: input_datetime.set_datetime
              target:
                entity_id: input_datetime.curatron_drying_start_time
              data:
                datetime: "{{ utcnow().strftime('%Y-%m-%d %H:%M:%S') }}"
            # Update completion date for dashboard
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_completion_date
              data:
                value: "{{ completion_date_local }} ({{ total_days }} days from {{ utcnow().strftime('%Y-%m-%d') }})"
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_drying_log
              data:
                value: "UTC {{ utcnow().isoformat() }}Z - Drying started: {{ start_humidity }}% → {{ end_humidity }}% over {{ total_days }} days. Expected completion: {{ completion_date_local }}"
            - service: system_log.write
              data:
                message: "Curatron: Drying started at {{ utcnow().isoformat() }}Z (UTC). Completion expected: {{ completion_date_utc }} UTC"
                level: info
            - service: notify.mobile_app_pixel_9_pro_xl
              data:
                message: "Curatron drying started: {{ start_humidity }}% → {{ end_humidity }}% over {{ total_days }} days. Expected completion: {{ completion_date_local }}"
                title: "Drying Process Started"
                data:
                  tag: "curatron_drying"
        
        # === DRYING MODE DEACTIVATION (UTC STANDARDIZED) ===
        - conditions:
            - condition: trigger
              id: stop_drying_mode
          sequence:
            - service: switch.turn_off
              target:
                entity_id: switch.curatron_plug
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_completion_date
              data:
                value: "Stopped manually after {{ days_since_start }} days"
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_drying_log
              data:
                value: "UTC {{ utcnow().isoformat() }}Z - Drying stopped manually at {{ states('input_number.curatron_drying_threshold_slider') }}% after {{ days_since_start }} days"
            - service: system_log.write
              data:
                message: "Curatron: Drying stopped at {{ utcnow().isoformat() }}Z (UTC) after {{ days_since_start }} days"
                level: info
            - service: notify.mobile_app_pixel_9_pro_xl
              data:
                message: "Curatron drying stopped manually after {{ days_since_start }} days ({{ progress_percentage }}% complete). Normal control resumed."
                title: "Drying Process Stopped"
                data:
                  tag: "curatron_drying"
        
        # === UTC STANDARDIZED THRESHOLD DECREMENT ===
        - conditions:
            - condition: trigger
              id: daily_threshold_check
            - condition: state
              entity_id: input_boolean.curatron_drying_active_mode
              state: 'on'
            - condition: template
              value_template: "{{ drying_threshold > end_humidity }}"
            - condition: template
              # UTC-based step boundary check
              value_template: >
                {% set step_hours = step_days * 24 %}
                {% set hours_into_step = hours_since_start % step_hours %}
                {{ hours_into_step < 1 and days_since_start >= step_days }}
          sequence:
            - variables:
                new_threshold: "{{ [target_humidity_for_step, end_humidity] | max }}"
                step_number: "{{ current_step }}"
            - condition: template
              value_template: "{{ new_threshold != drying_threshold }}"
            - service: input_number.set_value
              target:
                entity_id: input_number.curatron_drying_threshold_slider
              data:
                value: "{{ new_threshold }}"
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_drying_log
              data:
                value: "UTC {{ utcnow().isoformat() }}Z - Step {{ step_number }}/{{ total_steps }} (Day {{ days_since_start }}): Threshold → {{ new_threshold }}%. {{ remaining_days }} days remaining."
            - service: system_log.write
              data:
                message: "Curatron: UTC {{ utcnow().isoformat() }}Z - Step {{ step_number }}/{{ total_steps }}, threshold {{ new_threshold }}%"
                level: info
            - service: notify.mobile_app_pixel_9_pro_xl
              data:
                message: "Drying Step {{ step_number }}/{{ total_steps }} ({{ progress_percentage }}% complete): Target → {{ new_threshold }}%. {{ remaining_days }} days remaining."
                title: "Drying Progress Update"
                data:
                  tag: "curatron_drying"
        
        # === DRYING COMPLETION (UTC STANDARDIZED) ===
        - conditions:
            - condition: trigger
              id: drying_complete_threshold
            - condition: state
              entity_id: input_boolean.curatron_drying_active_mode
              state: 'on'
          sequence:
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_completion_date
              data:
                value: "COMPLETED at {{ utcnow().strftime('%Y-%m-%d %H:%M') }} ({{ days_since_start }} days)"
            - service: input_text.set_value
              target:
                entity_id: input_text.curatron_drying_log
              data:
                value: "UTC {{ utcnow().isoformat() }}Z - DRYING COMPLETED: Reached {{ end_humidity }}% steady state after {{ days_since_start }} days"
            - service: notify.mobile_app_pixel_9_pro_xl
              data:
                message: "🎉 Curatron drying COMPLETED! Reached {{ end_humidity }}% after {{ days_since_start }} days. Process finished at {{ utcnow().strftime('%Y-%m-%d %H:%M') }} local time."
                title: "Drying Process Complete"
                data:
                  tag: "curatron_drying"
            - service: system_log.write
              data:
                message: "Curatron: COMPLETION at {{ utcnow().isoformat() }}Z (UTC). Maintaining {{ end_humidity }}% steady state."
                level: info
        
        # === HUMIDITY-BASED CONTROL (DRYING MODE) ===
        - conditions:
            - condition: or
              conditions:
                - condition: trigger
                  id: humidity_change
                - condition: trigger
                  id: threshold_change
            - condition: state
              entity_id: input_boolean.curatron_drying_active_mode
              state: 'on'
          sequence:
            - choose:
                # Turn ON during drying mode
                - conditions:
                    - condition: template
                      value_template: "{{ current_humidity > drying_threshold }}"
                    - condition: template
                      value_template: "{{ current_switch_state != 'on' }}"
                  sequence:
                    - service: switch.turn_on
                      target:
                        entity_id: switch.curatron_plug
                    - service: system_log.write
                      data:
                        message: "Curatron drying: ON at {{ current_humidity }}% (target: {{ drying_threshold }}%) - {{ utcnow().isoformat() }}Z"
                        level: info
                
                # Turn OFF during drying mode (with hysteresis)
                - conditions:
                    - condition: template
                      value_template: "{{ current_humidity <= (drying_threshold - hysteresis) }}"
                    - condition: template
                      value_template: "{{ current_switch_state != 'off' }}"
                  sequence:
                    - service: switch.turn_off
                      target:
                        entity_id: switch.curatron_plug
                    - service: system_log.write
                      data:
                        message: "Curatron drying: OFF at {{ current_humidity }}% (target: {{ drying_threshold }}%, hysteresis: {{ hysteresis }}%) - {{ utcnow().isoformat() }}Z"
                        level: info
        
        # === HUMIDITY-BASED CONTROL (NORMAL MODE) ===
        - conditions:
            - condition: trigger
              id: humidity_change
            - condition: state
              entity_id: input_boolean.curatron_drying_active_mode
              state: 'off'
          sequence:
            - choose:
                # Turn ON during normal mode
                - conditions:
                    - condition: template
                      value_template: "{{ current_humidity > normal_high_threshold }}"
                    - condition: template
                      value_template: "{{ current_switch_state != 'on' }}"
                  sequence:
                    - service: switch.turn_on
                      target:
                        entity_id: switch.curatron_plug
                    - service: system_log.write
                      data:
                        message: "Curatron normal: ON at {{ current_humidity }}% (threshold: {{ normal_high_threshold }}%) - {{ utcnow().isoformat() }}Z"
                        level: info
                
                # Turn OFF during normal mode
                - conditions:
                    - condition: template
                      value_template: "{{ current_humidity < normal_low_threshold }}"
                    - condition: template
                      value_template: "{{ current_switch_state != 'off' }}"
                  sequence:
                    - service: switch.turn_off
                      target:
                        entity_id: switch.curatron_plug
                    - service: system_log.write
                      data:
                        message: "Curatron normal: OFF at {{ current_humidity }}% (threshold: {{ normal_low_threshold }}%) - {{ utcnow().isoformat() }}Z"
                        level: info
      
      # FIXED: Default action for service-triggered calls - no more warnings
      default:
        - service: system_log.write
          data:
            message: "Curatron: Service-triggered execution ({{ trigger_info }}) at {{ utcnow().isoformat() }}Z - processing state-based control"
            level: debug
        # Process based on current state for service calls  
        - choose:
            # Service call during drying mode
            - conditions:
                - condition: state
                  entity_id: input_boolean.curatron_drying_active_mode
                  state: 'on'
              sequence:
                # Check if threshold decrement is needed
                - choose:
                    - conditions:
                        - condition: template
                          value_template: "{{ drying_threshold > end_humidity }}"
                        - condition: template
                          # UTC-based step boundary check
                          value_template: >
                            {% set step_hours = step_days * 24 %}
                            {% set hours_into_step = hours_since_start % step_hours %}
                            {{ hours_into_step < 1 and days_since_start >= step_days }}
                      sequence:
                        - variables:
                            new_threshold: "{{ [target_humidity_for_step, end_humidity] | max }}"
                            step_number: "{{ current_step }}"
                        - condition: template
                          value_template: "{{ new_threshold != drying_threshold }}"
                        - service: input_number.set_value
                          target:
                            entity_id: input_number.curatron_drying_threshold_slider
                          data:
                            value: "{{ new_threshold }}"
                        - service: input_text.set_value
                          target:
                            entity_id: input_text.curatron_drying_log
                          data:
                            value: "UTC {{ utcnow().isoformat() }}Z - Step {{ step_number }}/{{ total_steps }} (Day {{ days_since_start }}): Threshold → {{ new_threshold }}%. {{ remaining_days }} days remaining."
                        - service: system_log.write
                          data:
                            message: "Curatron: UTC {{ utcnow().isoformat() }}Z - Service call threshold update: Step {{ step_number }}/{{ total_steps }}, threshold {{ new_threshold }}%"
                            level: info
                # Handle humidity-based control during drying
                - choose:
                    # Turn ON during drying mode
                    - conditions:
                        - condition: template
                          value_template: "{{ current_humidity > drying_threshold }}"
                        - condition: template
                          value_template: "{{ current_switch_state != 'on' }}"
                      sequence:
                        - service: switch.turn_on
                          target:
                            entity_id: switch.curatron_plug
                        - service: system_log.write
                          data:
                            message: "Curatron drying: Service call ON at {{ current_humidity }}% (target: {{ drying_threshold }}%) - {{ utcnow().isoformat() }}Z"
                            level: info
                    
                    # Turn OFF during drying mode (with hysteresis)
                    - conditions:
                        - condition: template
                          value_template: "{{ current_humidity <= (drying_threshold - hysteresis) }}"
                        - condition: template
                          value_template: "{{ current_switch_state != 'off' }}"
                      sequence:
                        - service: switch.turn_off
                          target:
                            entity_id: switch.curatron_plug
                        - service: system_log.write
                          data:
                            message: "Curatron drying: Service call OFF at {{ current_humidity }}% (target: {{ drying_threshold }}%, hysteresis: {{ hysteresis }}%) - {{ utcnow().isoformat() }}Z"
                            level: info
            
            # Service call during normal mode
            - conditions:
                - condition: state
                  entity_id: input_boolean.curatron_drying_active_mode
                  state: 'off'
              sequence:
                - choose:
                    # Turn ON during normal mode
                    - conditions:
                        - condition: template
                          value_template: "{{ current_humidity > normal_high_threshold }}"
                        - condition: template
                          value_template: "{{ current_switch_state != 'on' }}"
                      sequence:
                        - service: switch.turn_on
                          target:
                            entity_id: switch.curatron_plug
                        - service: system_log.write
                          data:
                            message: "Curatron normal: Service call ON at {{ current_humidity }}% (threshold: {{ normal_high_threshold }}%) - {{ utcnow().isoformat() }}Z"
                            level: info
                    
                    # Turn OFF during normal mode
                    - conditions:
                        - condition: template
                          value_template: "{{ current_humidity < normal_low_threshold }}"
                        - condition: template
                          value_template: "{{ current_switch_state != 'off' }}"
                      sequence:
                        - service: switch.turn_off
                          target:
                            entity_id: switch.curatron_plug
                        - service: system_log.write
                          data:
                            message: "Curatron normal: Service call OFF at {{ current_humidity }}% (threshold: {{ normal_low_threshold }}%) - {{ utcnow().isoformat() }}Z"
                            level: info

# === INDIVIDUAL AUTOMATION ENTITIES (Dashboard Compatibility) ===
# These provide the individual entities that your UI dashboard expects to see

- id: curatron_humidity_control
  alias: Curatron Humidity Control
  description: Dashboard compatibility entity - routes to unified controller
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.curatron_humidity
  condition:
    - condition: state
      entity_id: input_boolean.curatron_drying_active_mode
      state: 'off'
  action:
    - service: automation.trigger
      target:
        entity_id: automation.curatron_unified_controller
      data:
        skip_condition: false

- id: curatron_drying_plug_control
  alias: Curatron Drying Plug Control
  description: Dashboard compatibility entity - manages plug state during drying
  mode: single
  trigger:
    - platform: state
      entity_id: input_number.curatron_drying_threshold_slider
    - platform: state
      entity_id: sensor.curatron_humidity
  condition:
    - condition: state
      entity_id: input_boolean.curatron_drying_active_mode
      state: 'on'
  action:
    - service: automation.trigger
      target:
        entity_id: automation.curatron_unified_controller
      data:
        skip_condition: false

- id: curatron_drying_threshold_decrementer_daily
  alias: Curatron Drying Threshold Decrementer Daily
  description: Dashboard compatibility entity - handles UTC-standardized interval decrements
  mode: single
  trigger:
    - platform: time_pattern
      hours: 3
      minutes: 15
  condition:
    - condition: state
      entity_id: input_boolean.curatron_drying_active_mode
      state: 'on'
  action:
    - service: automation.trigger
      target:
        entity_id: automation.curatron_unified_controller
      data:
        skip_condition: false

- id: curatron_drying_process_manager
  alias: Curatron Drying Process Manager  
  description: Dashboard compatibility entity - manages overall UTC-standardized drying process
  mode: single
  trigger:
    - platform: state
      entity_id: input_boolean.curatron_drying_active_mode
  action:
    - service: automation.trigger
      target:
        entity_id: automation.curatron_unified_controller
      data:
        skip_condition: false
